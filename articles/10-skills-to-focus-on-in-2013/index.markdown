{
    "title": "2013년에 주목 받는 10가지 기술",
    "author": "s0und0ne Kang",
    "date": "2013-04-18T12:19:57.782Z",
    "categories": [
        "translate"
    ],
    "tags": [
        "translate",
        "english",
        "trend"
    ],
    "acceptComment": true,
    "acceptTrackback": true,
    "published": "2013-04-18T12:19:57.782Z",
    "status": "publish",
    "important": false,
    "advanced": {}
}

***info 오역이나 수정이 필요한 부분이 있으면 언제든지 알려주시기 바랍니다.***
> [10 skills for developers to focus on in 2013](http://goo.gl/t4QUt) 을 번역함
    
저자 : 2012년 초반에 Justin James가 개발세계에서 가속도를 얻을 기술들의 목록을 썼다. 지금 그는 2013년에 대해서 다시 논한다.

이 글에서 1년여를 돌아보면, 나는 어떻게 이런 일부의 트렌드들이 장악하고 있는지 지켜봤다. 물론, 모바일개발은 인기있을거라고 기대됬었다. 그러나 테블릿, 특히 안드로이드 테블릿에서의 성장은 시장의 신성장을 추진했다.

빈번한 업데이트를 받는 모바일기기(특히 iOS기기)와 Chrome 과 Firefox 의 공개주기가 짧아진 덕분에, HTML5가 재빨리 여러방면에서 최고로 가아갈 수 있었다. 웹개발의 세계는 스스로를 두가지의 분야로 나눴다.

* 기업시장은 backend 는 Java와 .NET 으로 작동하고, 의사소통수단으로 [SOAP](http://www.soaplite.com/)(Service Oriented Access Protocol )을 사용
* 소비자시장은 경량 REST 웹 서비스와 함께 backend 는 PHP, Ruby, Python을 사용

사실, 나는 REST API 와 API를 이용한 HTML5 + Javascript front end 의 통신에 대한 호의로, backend server layer 와 동떨어진 사람들과 심각하게 부딪치기 시작했다. 그리고 jQuery 와 비슷한 tool 들의 힘 덕분에, 현재 Web 은 UI 분야에서 데스크탑의 기능과 쉽게 어울리고 있다. - 점점 더 많은 웹사이트에서 확실해지고 있다.

2013년을 예상해보면, 나는 이 목록의 항목들이 많이 바뀔 필요 없다고 생각한다. Ruby와 Python (그리고 NoSQL 데이터베이스) 를 배우는 것은 당신의 경력에서 필수는 아니지만, 그것들은 확실히 다른 진로로의 문이 될 수 있다. (모르겠다.) <code>Windows 8 development is not a must-have either, and it remains to be seen whether Windows 8 picks up adoption quickly enough to justify making it a priority</code>. 그러나 이 목록은 여전히 당신의 2013년 "내가 내워야 할 기술"의 필수 가이드로 충분하다.


## 당신이 필요한 기술은 무엇인가?
> 소프트웨어 개발은 몇년동안 상대적인 침체기를 가졌다. 그러나 현재 HTML5가 발판을 마련하고 Windows 8가 Windows 개발저변의 상당한 변화에 힘을 더하면서 소프트웨어 개발은 원래 궤도로 돌아왔고 속도를 회복하고 있다. 만약 당신이 시대에 앞서고 싶다면, 당신은 최소한 이 10개의 개발기술중 일부를 배우는 것을 고려해야 한다.

==================
###1. Mobile Development

만약 모바일 개발을 배우는 시간이 가치없다고 생각한다면, 다시 생학배봐야한다. 최근 Gartner Report에 따르면, 2012년 3분기에 안드로이드 모바일 기기판매가 PC선적량을 앞질렀다.([관련기사](http://www.zdnet.com/android-really-is-the-new-windows-7000007450/)). 게다가 다른 유명한 모바일 기기(iPhones, iPads, 심지어 "망해가고 있는" RIM 기기), 그리고 당신이 보고 있는 모바일 기기들은 파매에서 PC 를 왜소해 보이게 한다. 어떤 의미인가? 오직 PC에서만 작동하는 소프트웨어(모바일 기기에서 동작하지 않거나 사용하지 힘든 웹 사이트 포함)를 통해서만 생활을 해나간다면, 이제는 모바일 개발을 배울 때이다. 

==================
###2. NoSQL

나는 일반사람들 만큼 잘 정리된 관계형데이터베이스구조를 좋아한다. 하지만 모든 프로젝트에서 환영받는 것은 아니다. 우리는 대안이 괜찮았던 적이 없기 때문에 최고의 도구가 아닐때 조차 그것을 사용해왔다. 과거 몇년동안 굉장히 다양한 NoSQL 데이터 베이스 시스템이 소개되었다. 그리고 현재 중요 서비스 제공업체(Amazon, Microsoft 와 같은) 가 NoSQL을 지원할 뿐 아니라, 사용하는데 기술적인 제한이 없다. 그것드이 모든 프로젝트에 적합한가? 아니다. 그것들이 전통적인 데이터베이스들을 대체할까? 분명히 일부 프로젝트와 일부 개발자에게는 그럴 것이다. 그것들을 어떻게 사용할지 배울 시기이다. 그것들은 앞으로 몇년안에 보다 보편화 될 것이다. 

==================
###3. Unit Testing

우리는 단위테스트가 "오, 굉장한데" 에서 산업에서 최고의 예제가 되어가는 것을 봐왔다. 그리고 dynamic language의 사용이 늘어나면서, 단위 테스트는 보다 중요해지고 있다. 다양한 도구들과 프레임워크들은 단위테스트에 적용할 수 있다. 어떻게 하는지 모른다면, 지금이 배울 시간이다. 시대는 "resume enhancement" 에서 "resume requirement" 로 변하고 있다.

==================
###4. Python or Ruby

모든 프로젝트가 dynamic language 에 적합한 것이 아니고, 많은 프로젝트가 그것들에서 더 좋다. PHP 는 동시에 산업에서 승자였지만, 요즘 Python 과 Ruby 가 꽤 잘 하고 있다. 강력한 변수는 Ruby + Rails(또는 Ruby + Sinatra) 또는 Python + Django 를 웹 개발에 훌륭한 플랫폼으로 만들었고, Python은 오랫동안 "설계"작업에 애용되어왔다. 당신의 현재 기술에 추가로 Python 이나 Ruby 를 배우는 것은 당신에게 어떤 프로젝트를 더 잘 할 수 있는 방법에 유용한 대책을 제공한다. 

==================
###5. HTML5

HTML5는 빠르게 역을 떠나고있다. IE 10의 배포는 HTML5의 온 힘을 대부분의 사용자들에게 미치게 했다. (IE6 나 IE8 을 고수하지 않았다.) 지금 HTML5를 배우는 것은 당신을 어플리케이션의 다음세대에서 앞설 수 있도록 한다. Oh, 그리고 많은 모바일 기기들은 이미 그것을 잘 지원하고 있어서, 모바일 개발에서도 좋은 방법이다. 그리고 잊지 마라: HTML5는 Windows 8에서 UI 정의의 한가지 방법이다 

=================
###6. Windows 8
Windows 8은 뒤늦은 출발을 벗어날 것이다.([참고](http://goo.gl/sqgzT)), 하지만 종종 앱 스토어에서 승자가 되는 것이 레이스에서 승자가 되는 것의 기초가 된다. 선발자 이익은 엄청나다. 지금 Windows 스토어 있는 것이 분위기를 보고 접근하는 것보다 좋다. Windows 8 의 판매가 실망적이라도, 최근의 앱 판매 수치가 보여주는 것처럼 큰 연못의 애매한 크기의 물고기가 되는 것 보다 작은 연못의 유일한 물고기가 되는 것이 좋다. 

=============
###7. RESTful Web services
내가 개인적으로 Visual Studio에 국한해서 SOAP로 일하는 편의성과 용이함을 선호하는 동안, REST는 급성장하고 있다. 심지어 Microsoft는 그것을 OData에 포함시키기 시작하고 있다. JSON 은 SOAP 을 server-to-server 작업용도로만으로 만든 일의 결정타였다. 당신의 어플리캐이션이 독립적으로 작동하지 않는 한, REST를 모르는 것은 당신을 뒤처지게 할 것이다. 

=============
###8. JavaScript

Windows 8 이전에, 웹개발자가 아닌 사람이 JavaScript를 웹전용 언어로 보는 것은 쉬웠다. 더이상 아니다! JavaScript는 Windows 8의 현대 UI와 WinRT API 덕분에 순수 데스크탑과 타블렛 개발의 일등시민이다. XAML + C# 이나 VB.NET 은 완수 할 수 있는 좋은 방법이다. 그러나 당신의 지식에서 당신이 꺼낼 수 있는 것을 최대화하고 싶다면, HTML5 와 JavaScript 는 최고의 수단이다. 그것들은 Web 과 Modern UI/WinRT 를 제공하고, 당신은 그것들을 Appcelerator 사의 Titanium product 처럼 cross-platform 모바일 시스템에 이용 할 수 있다. 

============
###9. jQuery

당신이 직접적으로 HTML을 이용해서 일하는 곳에서 어떤 종류의 웹개발을 할 것이라면, jQuery 는 필수 기술이다. 많은 확실한 대안들이 있지만, jQuery 는 재빨리 HTML의 rich UI의 실질적인 도구가 되고 있다.

=========
###10. User experience
새로운 앱 스토어에서 선행자의 이익 이외에, 외형을 기본으로 볼때 많은 어플리케이션은 차별성이 거의 없다; 혼잡한 분야이다. 다른 한편으로는, 사용자 경험은 다른 이야기이다.

굉장한 사용자 경험을 만드는 것은 쉽지 않다.; 그것은 심지어 누군가가 당신의 어플리케이션을 다운받기 전에 시작되고 삭제과정까지 계속된다. 즉각적인 시대에 $0.99 와 무료 앱 다운로드, 그리고 광고를 포함한 Web app과 같은 다른 application으로 바꾸게 하는 장벽은 매우 낮다. 당신의 경험이 부족하다면, 많은 판매는 기대하지 마라.
